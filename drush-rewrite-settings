#!/usr/bin/env drush

<?php
// Creates a settings.php file for D6+
// Most of this adopted from site_install.drush.inc in drush.
// Usage: drush-rewrite-settings --db-url=mysql://{db_user}:{db_pass}@127.0.0.1/{sitename} --db-prefix={db_prefix}

// Hardcoded path to settings file. Should fit our needs.
$settingsfile = DRUPAL_ROOT . '/sites/default/settings.php';

$db_spec = drush_sql_read_db_spec();

if (!drush_op('copy', 'sites/default/default.settings.php', $settingsfile) && !drush_get_context('DRUSH_SIMULATE')) {
  drush_set_error(dt('Failed to copy sites/default/default.settings.php to  @settingsfile', array('@settingsfile' => $settingsfile)));
  return;
}
elseif (drush_drupal_major_version() == 6) {
  // On D6, we have to write $db_url ourselves.
  file_put_contents($settingsfile, "\n" . '$db_url = \'' . drush_get_option('db-url') . "';\n", FILE_APPEND);
  // Instead of parsing and performing string replacement on the configuration file,
  // the options are appended and override the defaults.
  // Database table prefix
  if (!empty($db_spec['db_prefix'])) {
    if (is_array($db_spec['db_prefix'])) {
      // Write db_prefix configuration as an array
      $db_prefix_config = '$db_prefix = ' . var_export($db_spec['db_prefix'], TRUE) . ';';
    }
    else {
      // Write db_prefix configuration as a string
      $db_prefix_config = '$db_prefix = \'' . $db_spec['db_prefix'] . '\';';
    }
    file_put_contents($settingsfile, "\n" . $db_prefix_config . "\n", FILE_APPEND);
  }
}
else {
  // D7+
  // Rename prefix key.
  if (isset($db_spec['db_prefix'])) {
    $db_spec['prefix'] = $db_spec['db_prefix'];
    unset($db_spec['db_prefix']);
  }
  $settings['databases'] = array(
    'value'    => array('default' => array('default' => $db_spec)),
    'required' => TRUE,
  );
  $settings['drupal_hash_salt'] = array(
    'value'    => drupal_hash_base64(drupal_random_bytes(55)),
    'required' => TRUE,
  );
  require_once DRUPAL_ROOT . '/includes/install.inc';
  drupal_rewrite_settings($settings);
}
